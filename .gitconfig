[user]
	email = memes@matthewemes.com
	name = Matthew Emes
	signingkey = 208EE736561DBC3D040B9454C612AC00AD36B1C3
[push]
	default = simple
	followTags = true
	recurseSubmodules = check
	autoSetupRemote = true
[status]
	showUntrackedFiles = all
	submodulessummary = 1
[transfer]
	fsckobjects = true
[credential]
	useHttpPath = true
	helper = osxkeychain
# Various shortcuts
[alias]
	branches = branch -a
	tags = tag
	stashall = stash save --all
	stashes = stash list
	undo = reset --soft HEAD^
	unstage = reset -q HEAD --
	revert = checkout --
	uncommit = reset --mixed HEAD~
	amend = commit --amend
	graph = log --graph --topo-order --abbrev-commit --date=short --decorate --all --boundary --pretty=format:'%Cgreen%ad %Cred%h%Creset -%C(yellow)%d%Creset %s %Cblue[%cn]%Creset'
	patch = add --patch
	patches = log --patch --decorate -10
	review = !"git diff --cached --diff-algorithm=minimal -w && git submodule foreach 'git diff --cached --diff-algorithm=minimal -w'"
	prune = fetch --prune
	words = diff --word-diff
	recent = for-each-ref --count=10 --sort=committerdate refs/heads/ --format="%(refname:short)"
	upstream = "!git log --oneline --no-merges ..origin/$(git branch-name)"
	pr = !"f() { git fetch -fu ${2:-upstream} refs/pull/$1/head:pr/$1 && git checkout pr/$1; }; f"
	pr-clean = "!git checkout master ; git for-each-ref refs/heads/pr/* --format="%(refname)" | while read ref ; do branch=${ref#refs/heads/} ; git branch -D $branch ; done"
	ours = !"f() { git checkout --ours $@ && git add $@; }; f"
	theirs = !"f() { git checkout --theirs $@ && git add $@; }; f"
	branch-name = "!git rev-parse --abbrev-ref HEAD"
	publish = "!git push -u origin $(git branch-name)"
	unpublish = "!git push origin :$(git branch-name)"
	is-clean = "!exit $(git status --porcelain 2>/dev/null | wc -l)"
	sync-upstream = !"f() { git fetch --all && git is-clean && git pull upstream $(git branch-name) && git publish; }; f"
	subdiff = "!git diff && git submodule foreach 'git diff'"
	subpublish = "!git push --recurse-submodules=on-demand -u origin $(git branch-name)"
	subpull = submodule update --remote --merge
	out = "log @{u}.."
[gpg]
	program = gpg
[core]
	excludesfile = ~/.gitignore.memes
[color]
	ui = auto
[http]
	cookiefile = ~/.gitcookies
[github]
	user = memes
[pull]
	rebase = false
[init]
	defaultBranch = main
[commit]
	template = ~/.git-commit-template
	verbose = true
[diff]
	submodule = log
	algorithm = histogram
	colorMoved = plain
	mnemonicPrefix = true
	renames = true
[submodule]
	recurse = true
[column]
	ui = auto
[branch]
	sort = -committerdate
[tag]
	sort = version:refname
[fetch]
	prune = true
	pruneTags = true
	all = true
[help]
	autocorrect = prompt
[rebase]
	autoSquash = true
	autoStash = true
	updateRefs = true
# Pull in any configuration that can't be stored in public git repo
#  - try to keep last configuration option in file
[include]
	path = ~/.gitconfig.private
